# Language setting http://docs.shippable.com/ci/languages/node/
language: node_js

# use this to control what branches get built.
# http://docs.shippable.com/ci/advancedOptions/branches/
branches:
  only:
    - master

# using pre-defined build variables
# full list http://docs.shippable.com/ci/advancedOptions/environmentVariables/
env:
  global:
    - TEST_RESULTS_DIR=$SHIPPABLE_REPO_DIR/shippable/testresults
    - CODE_COVERAGE_DIR=$SHIPPABLE_REPO_DIR/shippable/codecoverage
    - TESTS_LOC_DIR=$SHIPPABLE_REPO_DIR/tests
    - MOD_LOC=$SHIPPABLE_REPO_DIR/node_modules/.bin/
    - DOCKER_REPO=release-push-docker-hub
    - DOCKER_ACC=devopsrecipes # {account name}

build:

  # http://docs.shippable.com/ci/shippableyml/#ci
  ci:
    # npm mirrors can sometimes be flacky, better to use shippable_retry
    # http://docs.shippable.com/ci/advancedOptions/retry/
    - shippable_retry npm install
    - mkdir -p $TEST_RESULTS_DIR && mkdir -p $CODE_COVERAGE_DIR
    - pushd $TESTS_LOC_DIR
    - $MOD_LOC/mocha --recursive "$TESTS_LOC_DIR/**/*.spec.js" -R mocha-junit-reporter --reporter-options mochaFile=$TEST_RESULTS_DIR/testresults.xml
    - $MOD_LOC/istanbul --include-all-sources cover -root "$SHIPPABLE_REPO_DIR/routes" $SHIPPABLE_REPO_DIR/node_modules/mocha/bin/_mocha -- -R spec-xunit-file --recursive "$TESTS_LOC_DIR/**/*.spec.js"
    - $MOD_LOC/istanbul report cobertura --dir $CODE_COVERAGE_DIR
    - popd

  # http://docs.shippable.com/ci/shippableyml/#post_ci
  post_ci:
    - docker build -t $DOCKER_ACC/$DOCKER_REPO:$BRANCH.$BUILD_NUMBER .
    - docker push $DOCKER_ACC/$DOCKER_REPO:$BRANCH.$BUILD_NUMBER

# Integrations are used to connect external resources to CI
# http://docs.shippable.com/integrations/overview/
integrations:
  # adding docker hub integration so that credentials are available to CI Job
  # http://docs.shippable.com/platform/integration/dockerRegistryLogin/
  hub:
    - integrationName: drship_dockerhub
      type: dockerRegistryLogin


resources:
  - name: demo-img
    type: image
    integration: drship_dockerhub
    pointer:
      sourceName: "devopsrecipes/release-push-docker-hub"
      isPull: false
    seed:
      versionName: master.2
    flags:
      - release-single-component

  - name: demo-img-opts
    type: dockerOptions
    version:
      memory: 128
      cpuShares: 256
      portMappings:
        - 80:80
      publishAllPorts : true
    flags:
      - release-single-component

  - name: env-aws-ecs-cluster
    type: cluster
    integration: dr-aws
    pointer:
      sourceName : "release-push-docker-hub-ecs"
      region: "us-west-2"
    flags:
      - release-single-component

  - name: demo-release-version
    type: version
    seed:
      versionName: "1.0.0"
    flags:
      - release-single-component


jobs:

  - name: release-single-component_runCI
    type: runCI
    steps:
      - OUT: demo-img

  - name: demo-man
    type: manifest
    steps:
      - IN: demo-img
      - IN: demo-img-opts
    flags:
      - release-single-component

  - name: deploy-test-ecs
    type: deploy
    steps:
      - IN: demo-man
      - IN: env-aws-ecs-cluster
    flags:
      - release-single-component

  - name: version-deployment
    type: release
    bump: beta
    steps:
      - IN: demo-release-version
      - IN: deploy-test-ecs
    flags:
      - release-single-component
